@page
@model FUNewsManagement.Pages.NewsManagementModel
@inject IHttpContextAccessor HttpContextAccessor
@{
    var userRole = HttpContextAccessor.HttpContext?.Request.Cookies["Role"];
}
<h2>News Management</h2>
@if (userRole == "Staff"){
    <button type="button" class="btn btn-success mb-3" id="btnCreateNews">
        Create News
    </button>
}
<table class="table table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Headline</th>
            <th>Content</th>
            <th>Tags</th>
            <th>Status</th>
            <th>Source</th>
            @if (userRole == "Staff"){
                <th>Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var news in Model.NewsList)
        {
            <tr>
                <td>@news.NewsArticleId</td>
                <td>@news.NewsTitle</td>
                <td>@news.Headline</td>
                <td>@news.NewsContent</td>
                <td>
                    <div class="d-flex flex-wrap">
                        @if (news.Tags.Any()){
                            @foreach (var tag in news.Tags)
                            {
                                <label class="me-2"> @tag.TagName </label>
                            }
                        } else {
                            <label class="me-2">N/A</label>
                        }
                        
                    </div>
                </td>
                <td>
                    @if (news.NewsStatus.HasValue)
                    {
                        @if (news.NewsStatus.Value)
                        {
                            <span class="text-success">Active</span>
                        }
                        else
                        {
                            <span class="text-danger">Inactive</span>
                        }
                    }
                    else
                    {
                        <span class="text-muted">Unknown</span>
                    }
                </td>
                <td>@news.NewsSource</td>
                @if (userRole == "Staff"){
                    <td>
                        <button class="btn btn-warning btn-edit"
                                data-id="@news.NewsArticleId"
                                data-title="@news.NewsTitle"
                                data-headline="@news.Headline"
                                data-content="@news.NewsContent"
                                data-category="@news.CategoryId"
                                data-status="@(news.NewsStatus.HasValue ? news.NewsStatus.ToString().ToLower() : "")"
                                data-source="@news.NewsSource"
                                data-tags="@string.Join(",", news.Tags.Select(t => t.TagId))">
                            Edit
                        </button>
                        <form method="post" asp-page-handler="Delete" asp-route-id="@news.NewsArticleId"
                              onsubmit="return confirm('Are you sure you want to delete this news article?');">
                            <button type="submit" class="btn btn-danger btn-md">Delete</button>
                        </form>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>


<div class="modal fade" id="newsModal" tabindex="-1" aria-labelledby="newsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newsModalLabel">Create News Article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form method="post" id="newsForm">
                    <input type="hidden" id="newsId" name="NewsArticleId" />

                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="newsTitle" class="form-label">Title</label>
                                <input type="text" class="form-control" id="newsTitle" name="NewsTitle" required />
                            </div>

                            <div class="mb-3">
                                <label for="newsHeadline" class="form-label">Headline</label>
                                <input type="text" class="form-control" id="newsHeadline" name="Headline" required />
                            </div>

                            <div class="mb-3">
                                <label for="newsContent" class="form-label">Content</label>
                                <textarea class="form-control" id="newsContent" name="NewsContent" rows="5" required></textarea>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="newsStatus" class="form-label">Status</label>
                                <select class="form-control" id="newsStatus" name="NewsStatus">
                                    <option value="">Unknown</option>
                                    <option value="true">Active</option>
                                    <option value="false">Inactive</option>
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="newsSource" class="form-label">Source</label>
                                <input type="text" class="form-control" id="newsSource" name="NewsSource" required />
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">Tags</h5>
                                </div>
                                <div class="card-body">
                                    <div id="tagContainer">
                                        @foreach (var tag in Model.AllTags)
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input tag-checkbox" type="checkbox" name="SelectedTags" value="@tag.TagId" id="tag_@tag.TagId">
                                                <label class="form-check-label" for="tag_@tag.TagId">
                                                    @tag.TagName
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label for="newsCategory" class="form-label">Category</label>
                            <select class="form-control" id="newsCategory" name="SelectedCategory" required>
                                <option value="">-- Select Category --</option>
                                @foreach (var category in Model.AllCategories)
                                {
                                    <option value="@category.CategoryId">@category.CategoryName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <button type="submit" id="newsSubmitButton" class="btn btn-primary mt-3">Create News</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        var newsModal = new bootstrap.Modal(document.getElementById("newsModal"));

        function openNewsModal(isEdit, data = {}) {
            document.getElementById("newsModalLabel").textContent = isEdit ? "Edit News Article" : "Create News Article";
            document.getElementById("newsSubmitButton").textContent = isEdit ? "Save Changes" : "Create News";
              let statusValue = data.status;
    if (statusValue === "true") {
        statusValue = "true";
    } else if (statusValue === "false") {
        statusValue = "false";
    } else {
        statusValue = ""; // Handle null case
    }
    document.getElementById("newsStatus").value = statusValue;
            document.getElementById("newsSource").value = isEdit ? data.source || "" : "";
            document.getElementById("newsId").value = isEdit ? data.id || "" : "";
            document.getElementById("newsTitle").value = isEdit ? data.title || "" : "";
            document.getElementById("newsHeadline").value = isEdit ? data.headline || "" : "";
            document.getElementById("newsContent").value = isEdit ? data.content || "" : "";

            var selectedTagIds = isEdit ? (data.tags || "").split(",") : [];
            document.querySelectorAll(".tag-checkbox").forEach(function (checkbox) {
                checkbox.checked = selectedTagIds.includes(checkbox.value);
            });

            document.getElementById("newsCategory").value = isEdit ? data.category || "" : "";

            document.getElementById("newsForm").action = isEdit
                ? "/NewsManagement?handler=Edit"
                : "/NewsManagement?handler=Create";

            newsModal.show();
        }

        // Open modal for creating a news article
        document.getElementById("btnCreateNews").addEventListener("click", function () {
            openNewsModal(false);
        });

        // Open modal for editing an existing news article
        document.querySelectorAll(".btn-edit").forEach(function (button) {
            button.addEventListener("click", function () {
                openNewsModal(true, {
                    id: this.getAttribute("data-id"),
                    title: this.getAttribute("data-title"),
                    headline: this.getAttribute("data-headline"),
                    content: this.getAttribute("data-content"),
                    tags: this.getAttribute("data-tags"),
                    category: this.getAttribute("data-category"),
                    status: this.getAttribute("data-status"),
                    source: this.getAttribute("data-source")
                });
            });
        });
    });
</script>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script src="js/signalr-news.js"></script>
}